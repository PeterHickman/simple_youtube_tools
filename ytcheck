#!/usr/bin/env ruby
# frozen_string_literal: true

CRC_FILE = 'downloaded.crc'
TXT_FILE = 'downloaded.txt'

require 'shellwords'

require 'colorize'

def get_vid(file)
  file.split('[').last.split(']').first
end

def load_downloaded
  if File.exist?(TXT_FILE)
    File.open(TXT_FILE, 'r').read.split("\n")
  else
    puts "There needs to be a downloaded.txt here".red
    exit 1
  end
end

def save_downloaded(downloaded)
  f = File.open(TXT_FILE, 'w')
  downloaded.each do |line|
    f.puts line
  end
  f.close
end

def load_crc
  return {} unless File.exist?(CRC_FILE)

  h = {}

  File.open(CRC_FILE, 'r').each do |line|
    k, v = line.chomp.split("\t")
    h[k] = v
  end

  h
end

def save_crc(data)
  f = File.open(CRC_FILE, 'w')
  data.each do |k, v|
    f.puts "#{k}\t#{v}"
  end
  f.close
end

def get_crc(file)
  x = `sha256sum #{Shellwords.escape(file)}`
  x.split(/\s+/).first
end

downloaded = load_downloaded
crc = load_crc

broken = false

Dir['**/*.mp4'].each do |file|
  name = File.basename(file)

  vid = get_vid(file)

  next if crc.key?(vid)

  r = system("ffmpeg -v error -i #{Shellwords.escape(file)} -f null - 2>error.log")
  if r
    puts "    #{name}".green
    crc[vid] = get_crc(file)
    save_crc(crc)
  else
    puts "    #{name}".red

    begin
      File.delete(file)
    rescue => e
      puts "    #{e}"
    end

    downloaded.delete(vid)
    broken = true
  end
end

save_downloaded(downloaded) if broken
